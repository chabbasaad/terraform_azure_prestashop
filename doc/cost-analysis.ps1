# Script d'analyse des co√ªts Taylor Shift Infrastructure
# G√©n√®re un rapport de co√ªts pour l'estimation budg√©taire

param(
    [Parameter(Mandatory=$true)]
    [ValidateSet("dev", "staging", "prod")]
    [string]$Environment,
    
    [Parameter(Mandatory=$false)]
    [int]$ConcurrentUsers = 100,
    
    [Parameter(Mandatory=$false)]
    [int]$HoursPerDay = 8,
    
    [Parameter(Mandatory=$false)]
    [int]$DaysPerMonth = 22
)

Write-Host "üéµ Taylor Shift - Analyse des co√ªts Infrastructure" -ForegroundColor Cyan
Write-Host "Environnement: $Environment" -ForegroundColor Yellow
Write-Host "Utilisateurs simultan√©s: $ConcurrentUsers" -ForegroundColor Yellow
Write-Host "=============================================" -ForegroundColor Cyan

# Configuration des co√ªts par environnement (prix mensuels en EUR)
$CostConfigs = @{
    "dev" = @{
        "ContainerApps" = 20
        "Database" = 25
        "KeyVault" = 2
        "Monitoring" = 10
        "Storage" = 5
        "Networking" = 0
        "MaxReplicas" = 3
        "DatabaseSKU" = "B_Standard_B1ms"
        "ExpectedUsers" = 50
    }
    "staging" = @{
        "ContainerApps" = 150
        "Database" = 200
        "KeyVault" = 5
        "Monitoring" = 50
        "Storage" = 15
        "Networking" = 20
        "MaxReplicas" = 8
        "DatabaseSKU" = "GP_Standard_D2ds_v4"
        "ExpectedUsers" = 500
    }
    "prod" = @{
        "ContainerApps" = 800
        "Database" = 600
        "KeyVault" = 10
        "Monitoring" = 100
        "Storage" = 50
        "Networking" = 40
        "CDN" = 30
        "WAF" = 25
        "Backup" = 35
        "MaxReplicas" = 50
        "DatabaseSKU" = "GP_Standard_D4ds_v4"
        "ExpectedUsers" = 10000
    }
}

$config = $CostConfigs[$Environment]

Write-Host "`nüìä D√âTAIL DES CO√õTS MENSUELS" -ForegroundColor Green
Write-Host "============================" -ForegroundColor Green

$totalCost = 0

foreach ($service in $config.Keys) {
    if ($service -notin @("MaxReplicas", "DatabaseSKU", "ExpectedUsers")) {
        $cost = $config[$service]
        $totalCost += $cost
        Write-Host "‚Ä¢ $service : $cost EUR" -ForegroundColor White
    }
}

Write-Host "`nüí∞ CO√õT TOTAL MENSUEL: $totalCost EUR" -ForegroundColor Magenta

# Calculs de performance
Write-Host "`n‚ö° ANALYSE DE PERFORMANCE" -ForegroundColor Green
Write-Host "=========================" -ForegroundColor Green

$costPerUser = [math]::Round($totalCost / $config.ExpectedUsers, 2)
$costPerUserInput = [math]::Round($totalCost / $ConcurrentUsers, 2)

Write-Host "‚Ä¢ Utilisateurs attendus: $($config.ExpectedUsers)" -ForegroundColor White
Write-Host "‚Ä¢ Co√ªt par utilisateur attendu: $costPerUser EUR" -ForegroundColor White
Write-Host "‚Ä¢ Votre scenario ($ConcurrentUsers utilisateurs): $costPerUserInput EUR par utilisateur" -ForegroundColor Yellow

# Estimation des co√ªts selon l'utilisation
Write-Host "`nüìà PROJECTION SELON L'UTILISATION" -ForegroundColor Green
Write-Host "==================================" -ForegroundColor Green

$hourlyRate = [math]::Round($totalCost / (24 * 30), 2)
$dailyUsageCost = [math]::Round($hourlyRate * $HoursPerDay, 2)
$monthlyUsageCost = [math]::Round($dailyUsageCost * $DaysPerMonth, 2)

Write-Host "‚Ä¢ Co√ªt horaire: $hourlyRate EUR" -ForegroundColor White
Write-Host "‚Ä¢ Usage quotidien ($HoursPerDay h/jour): $dailyUsageCost EUR" -ForegroundColor White
Write-Host "‚Ä¢ Usage mensuel ($DaysPerMonth jours): $monthlyUsageCost EUR" -ForegroundColor Yellow

# Recommandations
Write-Host "`nüí° RECOMMANDATIONS" -ForegroundColor Green
Write-Host "==================" -ForegroundColor Green

switch ($Environment) {
    "dev" {
        Write-Host "‚Ä¢ Id√©al pour le d√©veloppement et les tests" -ForegroundColor White
        Write-Host "‚Ä¢ Arr√™ter les ressources apr√®s les heures de travail pour √©conomiser" -ForegroundColor Yellow
        Write-Host "‚Ä¢ Co√ªt tr√®s abordable pour l'apprentissage" -ForegroundColor Green
    }
    "staging" {
        Write-Host "‚Ä¢ Parfait pour les tests de charge avant production" -ForegroundColor White
        Write-Host "‚Ä¢ Utiliser seulement pendant les phases de test" -ForegroundColor Yellow
        Write-Host "‚Ä¢ Configuration proche de la production" -ForegroundColor Green
    }
    "prod" {
        Write-Host "‚Ä¢ Configuration haute performance pour le concert" -ForegroundColor White
        Write-Host "‚Ä¢ Monitoring 24/7 inclus" -ForegroundColor Green
        Write-Host "‚Ä¢ Scaling automatique jusqu'√† $($config.MaxReplicas) r√©pliques" -ForegroundColor Green
        Write-Host "‚Ä¢ Sauvegardes et haute disponibilit√©" -ForegroundColor Green
    }
}

# Comparaison avec d'autres environnements
Write-Host "`nüìä COMPARAISON DES ENVIRONNEMENTS" -ForegroundColor Green
Write-Host "==================================" -ForegroundColor Green

foreach ($env in @("dev", "staging", "prod")) {
    $envConfig = $CostConfigs[$env]
    $envTotal = 0
    foreach ($service in $envConfig.Keys) {
        if ($service -notin @("MaxReplicas", "DatabaseSKU", "ExpectedUsers")) {
            $envTotal += $envConfig[$service]
        }
    }
    $envCostPerUser = [math]::Round($envTotal / $envConfig.ExpectedUsers, 2)
    
    if ($env -eq $Environment) {
        Write-Host "‚Üí $env : $envTotal EUR/mois ($envCostPerUser EUR/utilisateur) ‚Üê S√âLECTIONN√â" -ForegroundColor Yellow
    } else {
        Write-Host "  $env : $envTotal EUR/mois ($envCostPerUser EUR/utilisateur)" -ForegroundColor White
    }
}

# Tests de benchmark recommand√©s
Write-Host "`nüß™ TESTS DE BENCHMARK RECOMMAND√âS" -ForegroundColor Green
Write-Host "==================================" -ForegroundColor Green

switch ($Environment) {
    "dev" {
        Write-Host "‚Ä¢ Apache Bench: ab -n 1000 -c 50 [URL]" -ForegroundColor White
        Write-Host "‚Ä¢ Dur√©e: 5 minutes" -ForegroundColor White
        Write-Host "‚Ä¢ Objectif: 50 req/sec" -ForegroundColor White
    }
    "staging" {
        Write-Host "‚Ä¢ Apache Bench: ab -n 10000 -c 500 [URL]" -ForegroundColor White
        Write-Host "‚Ä¢ Dur√©e: 30 minutes" -ForegroundColor White
        Write-Host "‚Ä¢ Objectif: 500 req/sec" -ForegroundColor White
    }
    "prod" {
        Write-Host "‚Ä¢ Load test professionnel recommand√©" -ForegroundColor White
        Write-Host "‚Ä¢ 10,000 utilisateurs simultan√©s" -ForegroundColor White
        Write-Host "‚Ä¢ Dur√©e: 60 minutes" -ForegroundColor White
        Write-Host "‚Ä¢ Objectif: 1,000 req/sec" -ForegroundColor White
    }
}

# Estimation du ROI pour le concert
if ($Environment -eq "prod") {
    Write-Host "`nüí∞ ESTIMATION ROI CONCERT TAYLOR SHIFT" -ForegroundColor Green
    Write-Host "=======================================" -ForegroundColor Green
    
    $ticketPrice = 150  # Prix moyen d'un billet
    $expectedTickets = 50000  # Nombre de billets √† vendre
    $revenue = $ticketPrice * $expectedTickets
    $infrastructureCost = $totalCost * 3  # 3 mois d'infrastructure
    $roi = [math]::Round((($revenue - $infrastructureCost) / $infrastructureCost) * 100, 0)
    
    Write-Host "‚Ä¢ Prix moyen billet: $ticketPrice EUR" -ForegroundColor White
    Write-Host "‚Ä¢ Billets √† vendre: $expectedTickets" -ForegroundColor White
    Write-Host "‚Ä¢ Revenus attendus: $revenue EUR" -ForegroundColor Green
    Write-Host "‚Ä¢ Co√ªt infrastructure (3 mois): $infrastructureCost EUR" -ForegroundColor White
    Write-Host "‚Ä¢ ROI: $roi%" -ForegroundColor Magenta
}

Write-Host "`nüéØ PROCHAINES √âTAPES" -ForegroundColor Green
Write-Host "===================" -ForegroundColor Green
Write-Host "1. R√©viser les co√ªts avec votre √©quipe" -ForegroundColor White
Write-Host "2. Configurer les alertes de budget Azure" -ForegroundColor White
Write-Host "3. Effectuer des tests de charge" -ForegroundColor White
Write-Host "4. Monitorer les co√ªts r√©els vs estimations" -ForegroundColor White

Write-Host "`nüéµ Taylor Shift vous attend! üéµ" -ForegroundColor Cyan